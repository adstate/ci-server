{"version":3,"sources":["pages/Start/Start.js","pages/Settings/Settings.js","pages/Configuration/Configuration.js","services/api.js","actions/builds.js","actions/actionTypes.js","pages/BuildHistory/BuildHistory.js","pages/BuildDetails/BuildDetails.js","actions/settings.js","containers/Main.js","components/App/App.js","components/Icon/Icon.js","components/Button/Button.js","components/Header/Header.js","components/Footer/Footer.js","components/Layout/Layout.js","components/Configure/Configure.js","components/SettingForm/SettingForm.js","components/Form/FormLabel.js","components/Form/FormField.js","components/Form/FormGroup.js","components/Form/FormError.js","components/Build/BuildList.js","components/Build/Build.js","components/Build/BuildLog.js","components/Build/testBuildLog.js","components/Build/NewBuild.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Error/Error.js","serviceWorker.js","reducers/settings.js","reducers/builds.js","reducers/index.js","store/index.js","index.js"],"names":["Start","settings","useSelector","state","pending","Fragment","title","align","error","id","includes","repoStatus","Settings","container","Configuration","to","size","className","type","instance","require","create","baseURL","timeout","a","post","repoName","buildCommand","mainBranch","period","Number","get","then","response","data","commitHash","params","buildId","saveSettings","getSettings","addBuild","getBuilds","getBuild","getBuildLog","addBuildSuccess","build","fetchBuilds","offset","limit","dispatch","buildsUpdateOffset","api","res","builds","catch","fetchBuildsError","BuildHistory","addBuildPending","add_build_pending","useDispatch","useState","openModal","setOpenModal","useEffect","onClick","icon","class","open","onClose","onRunBuild","hash","BuildDetails","useParams","items","find","get_build_pending","buildLog","build_log_to_view","fetchError","history","useHistory","fetchBuildError","log","err","push","detailed","test","status","fetchSettings","fetchSettingsError","Main","exact","path","component","App","Icon","pseudo","iconClass","classNames","Button","variant","children","disabled","buttonClass","defaultProps","Header","Footer","Layout","layoutClass","Configure","SettingForm","saveSettingsSuccess","saveSettingsError","postSettings","useForm","handleSubmit","register","errors","waitingCloneRepo","save_pending","repoNotCloned","name","onSubmit","values","required","formRef","placeholder","defaultValue","message","direction","pattern","cleared","FormLabel","labelClass","ClassNames","FormField","mask","value","setValue","fieldClass","Classnames","inputClass","ref","onChange","event","target","FormGroup","space","formGroupClass","FormError","BuildList","load_more","init_loaded","buildClickHandler","map","key","buildNumber","length","Build","buildClass","data-id","toLowerCase","commitMessage","branchName","authorName","start","format","Date","locale","ru","duration","convert","Convert","fg","BuildLog","dangerouslySetInnerHTML","__html","toHtml","NewBuild","reset","Loader","Modal","modalClass","Error","Boolean","window","location","hostname","match","initialState","action","Object","assign","save_error","totalFetch","build_to_view","get_log_error","combineReducers","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.226594e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Layout, Header, Loader, Error } from 'components';\r\nimport { BuildHistory, Configuration } from 'pages';\r\n\r\n\r\nconst Start = () => {\r\n    const settings = useSelector(state => state.settings);\r\n\r\n    if (settings.pending !== false) {\r\n        return (\r\n            <React.Fragment>\r\n                <Header title=\"School CI Server\"></Header>\r\n                <Layout align=\"center\">\r\n                    <Loader/>\r\n                </Layout>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (settings.error) {\r\n        return (\r\n            <React.Fragment>\r\n                <Header title=\"School CI Server\"></Header>\r\n                <Layout align=\"center\">\r\n                    <Error>Error of fetching</Error>\r\n                </Layout>\r\n            </React.Fragment>            \r\n        )\r\n    }\r\n    \r\n    if (settings.id && ['Cloned', 'Empty'].includes(settings.repoStatus)) {\r\n        return <BuildHistory/>\r\n    }\r\n    \r\n    return <Configuration/>\r\n}\r\n\r\nexport default Start;\r\n","import React from 'react';\r\nimport { Header, Layout, SettingForm } from 'components';\r\n\r\n\r\nconst Settings = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header title=\"School CI Server\"></Header>\r\n            <Layout container>\r\n                <SettingForm/>\r\n            </Layout>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;","import React, {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Layout, Configure, Header, Button, Icon } from 'components';\r\n\r\nconst Configuration = () => { \r\n    return (\r\n        <React.Fragment>\r\n            <Header title=\"School CI Server\">\r\n                <Link to=\"/settings\">\r\n                    <Button size=\"s\">\r\n                        <Icon className=\"button__icon\" type=\"settings\" size=\"xs\"></Icon>\r\n                        <span className=\"button__text\">Settings</span>\r\n                    </Button>\r\n                </Link>\r\n            </Header>\r\n            <Layout align=\"center\">\r\n                <Configure/>\r\n            </Layout>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Configuration;\r\n","const axios = require('axios');\r\n\r\nconst instance = axios.create({\r\n    baseURL: '/api',\r\n    timeout: 10000\r\n});\r\n\r\nasync function saveSettings(settings) {\r\n    return instance.post('/settings', {\r\n        repoName: settings.repoName,\r\n        buildCommand: settings.buildCommand,\r\n        mainBranch: settings.mainBranch || 'master',\r\n        period: Number(settings.period)\r\n    });\r\n}\r\n\r\nasync function getSettings() {\r\n    return instance.get('/settings').then(response => response.data);\r\n}\r\n\r\nasync function addBuild(commitHash) {\r\n    return instance.post(`/builds/${commitHash}`).then(response => response.data);\r\n}\r\n\r\nasync function getBuilds(params) {\r\n    return instance.get('/builds', {params}).then(response => response.data);\r\n}\r\n\r\nasync function getBuild(buildId) {\r\n    return instance.get(`/builds/${buildId}`).then(response => response.data);\r\n}\r\n\r\nasync function getBuildLog(buildId) {\r\n    return instance.get(`/builds/${buildId}/logs`).then(response => response.data);\r\n}\r\n\r\nexport default {\r\n    saveSettings,\r\n    getSettings,\r\n    addBuild,\r\n    getBuilds,\r\n    getBuild,\r\n    getBuildLog,\r\n};\r\n","import {\r\n    FETCH_BUILDS_PENDING,\r\n    FETCH_BUILDS_SUCCESS,\r\n    FETCH_BUILDS_ERROR,\r\n    FETCH_BUILD_PENDING,\r\n    FETCH_BUILD_SUCCESS,\r\n    FETCH_BUILD_ERROR,\r\n    FETCH_BUILD_LOG_SUCCESS,\r\n    FETCH_BUILD_LOG_ERROR,\r\n    ADD_BUILD_PENDING,\r\n    ADD_BUILD_SUCCESS,\r\n    ADD_BUILD_ERROR,\r\n    ADD_BUILD_TO_VIEW,\r\n    CLEAR_BUILD_TO_VIEW,\r\n    BUILDS_UPDATE_OFFSET,\r\n    BUILDS_CLEAR_STATE\r\n} from './actionTypes';\r\n\r\nimport api from '../services/api';\r\n\r\nexport const fetchBuildsPending = () => ({\r\n    type: FETCH_BUILDS_PENDING\r\n});\r\n\r\nexport const fetchBuildsSuccess = (builds) => ({\r\n    type: FETCH_BUILDS_SUCCESS,\r\n    builds\r\n});\r\n\r\nexport const fetchBuildsError = (error) => ({\r\n    type: FETCH_BUILDS_ERROR,\r\n    error\r\n});\r\n\r\nexport const fetchBuildPending = () => ({\r\n    type: FETCH_BUILD_PENDING\r\n});\r\n\r\nexport const fetchBuildSuccess = (build) => ({\r\n    type: FETCH_BUILD_SUCCESS,\r\n    build\r\n});\r\n\r\nexport const fetchBuildError = (error) => ({\r\n    type: FETCH_BUILD_ERROR,\r\n    error\r\n});\r\n\r\nexport const addBuildPending = () => ({\r\n    type: ADD_BUILD_PENDING\r\n});\r\n\r\nexport const addBuildSuccess = (build) => ({\r\n    type: ADD_BUILD_SUCCESS,\r\n    build\r\n});\r\n\r\nexport const addBuildError = () => ({\r\n    type: ADD_BUILD_ERROR\r\n});\r\n\r\nexport const addBuildToView = (build) => ({\r\n    type: ADD_BUILD_TO_VIEW,\r\n    build\r\n});\r\n\r\nexport const clearBuildToView = () => ({\r\n    type: CLEAR_BUILD_TO_VIEW\r\n});\r\n\r\nexport const fetchBuildLogSuccess = (log) => ({\r\n    type: FETCH_BUILD_LOG_SUCCESS,\r\n    log\r\n});\r\n\r\nexport const fetchBuildLogError = (error) => ({\r\n    type: FETCH_BUILD_LOG_ERROR,\r\n    error\r\n});\r\n\r\nexport const buildsUpdateOffset = (offset) => ({\r\n    type: BUILDS_UPDATE_OFFSET,\r\n    offset\r\n});\r\n\r\nexport const buildsClearState = () => ({\r\n    type: BUILDS_CLEAR_STATE\r\n});\r\n\r\nexport const fetchBuilds = (params) => {\r\n    const {offset, limit} = params;\r\n\r\n    return (dispatch) => {\r\n        dispatch(buildsUpdateOffset(offset));\r\n        dispatch(fetchBuildsPending());\r\n\r\n        api.getBuilds({offset, limit})\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchBuildsSuccess(res.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchBuildsError(error));\r\n            })\r\n    }\r\n}\r\n\r\nexport const getBuild = (buildId) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchBuildPending());\r\n\r\n        api.getBuild(buildId)\r\n            .then(res => {\r\n                if (res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchBuildSuccess(res.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchBuildError(error));\r\n            })\r\n    }\r\n}\r\n\r\nexport const getBuildLog = (buildId) => {\r\n    return (dispatch) => {\r\n        api.getBuildLog(buildId)\r\n           .then(res => {\r\n                dispatch(fetchBuildLogSuccess(res));\r\n           })\r\n           .catch(err => {\r\n                dispatch(fetchBuildLogError(err));\r\n           })\r\n    }\r\n}\r\n\r\nexport const addBuild = (commitHash) => {\r\n    return (dispatch) => {\r\n        dispatch(addBuildPending());\r\n\r\n        api.addBuild(commitHash)\r\n            .then(res => {\r\n                if (res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(addBuildSuccess(res.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(addBuildError(error));\r\n            })\r\n    }\r\n}","export const FETCH_SETTINGS_PENDING = 'FETCH_SETTINGS_PENDING';\r\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\r\nexport const FETCH_SETTINGS_ERROR = 'FETCH_SETTINGS_ERROR';\r\nexport const SAVE_SETTINGS_PENDING = 'SAVE_SETTINGS_PENDING';\r\nexport const SAVE_SETTINGS_SUCCESS = 'SAVE_SETTINGS_SUCCESS';\r\nexport const SAVE_SETTINGS_ERROR = 'SAVE_SETTINGS_ERROR';\r\n\r\nexport const FETCH_BUILDS_PENDING = 'FETCH_BUILDS_PENDING';\r\nexport const FETCH_BUILDS_SUCCESS = 'FETCH_BUILDS_SUCCESS';\r\nexport const FETCH_BUILDS_ERROR = 'FETCH_BUILDS_ERROR';\r\nexport const BUILDS_UPDATE_OFFSET = 'BUILDS_UPDATE_OFFSET';\r\nexport const BUILDS_CLEAR_STATE = 'BUILDS_CLEAR_STATE';\r\n\r\nexport const FETCH_BUILD_PENDING = 'FETCH_BUILD_PENDING';\r\nexport const FETCH_BUILD_SUCCESS = 'FETCH_BUILD_SUCCESS';\r\nexport const FETCH_BUILD_ERROR = 'FETCH_BUILD_ERROR';\r\nexport const FETCH_BUILD_LOG_SUCCESS = 'FETCH_BUILD_LOG_SUCCESS';\r\nexport const FETCH_BUILD_LOG_ERROR = 'FETCH_BUILD_LOG_ERROR';\r\nexport const ADD_BUILD_PENDING = 'ADD_BUILD_PENDING';\r\nexport const ADD_BUILD_SUCCESS = 'ADD_BUILD_SUCCESS';\r\nexport const ADD_BUILD_ERROR = 'ADD_BUILD_ERROR';\r\nexport const ADD_BUILD_TO_VIEW = 'ADD_BUILD_TO_VIEW';\r\nexport const CLEAR_BUILD_TO_VIEW = 'CLEAR_BUILD_TO_VIEW';","import React, {useState, useEffect} from 'react';\r\nimport {connect, useSelector, useDispatch} from 'react-redux';\r\nimport { Header, Layout, Button, Icon, BuildList, NewBuild } from 'components';\r\nimport {addBuild} from 'actions/builds';\r\n\r\n\r\nconst BuildHistory = () => {\r\n    const settings = useSelector(state => state.settings);\r\n    const addBuildPending = useSelector(state => state.builds.add_build_pending);\r\n\r\n    const dispatch = useDispatch();\r\n    const runBuild = (hash) => dispatch(addBuild(hash));\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (addBuildPending === false) {\r\n            setOpenModal(false);\r\n        }\r\n    }, [addBuildPending]);\r\n\r\n    const openModalHandler = () => {\r\n        setOpenModal(true);\r\n    }\r\n\r\n    const closeModalhandler = () => {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header title={settings.repoName}>\r\n                <div className=\"header__button-group\">\r\n                    <Button className=\"button_type_icon-text\" size=\"s\" onClick={openModalHandler}>\r\n                        <Icon className=\"button__icon\" type=\"play\"/>\r\n                        <span className=\"button__text\">Run build</span>\r\n                    </Button>\r\n                    <Button icon size=\"s\" to=\"/settings\">\r\n                        <Icon class=\"button__icon\" type=\"settings\" size=\"xs\"/>\r\n                    </Button>\r\n                </div>\r\n            </Header>\r\n            <Layout container>\r\n                <BuildList/>\r\n            </Layout>\r\n            <NewBuild open={openModal} onClose={closeModalhandler} onRunBuild={runBuild} pending={addBuildPending}/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default BuildHistory;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\n\r\nimport {Button, Icon, Layout, Header, Build, BuildLog, Loader, Error} from 'components';\r\nimport {\r\n    addBuildPending,\r\n    addBuildSuccess,\r\n    addBuildError,\r\n    getBuild,\r\n    getBuildLog,\r\n    clearBuildToView\r\n} from 'actions/builds';\r\n\r\nimport api from 'services/api';\r\n\r\n\r\nconst BuildDetails = () => {\r\n    const { id } = useParams();\r\n\r\n    const build = useSelector(state => state.builds.items.find(build => build.id === id));\r\n    const {\r\n        get_build_pending: pending,\r\n        build_log_to_view: buildLog,\r\n        error: fetchError,\r\n      } = useSelector(state => state.builds);\r\n\r\n    const settings = useSelector(state => state.settings);\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!build) {\r\n            dispatch(getBuild(id));\r\n        }        \r\n        dispatch(getBuildLog(id));\r\n    }, [id, dispatch]);\r\n\r\n    const rebuildHandler = () => {\r\n        dispatch(addBuildPending());\r\n\r\n        api.addBuild(build.commitHash)\r\n            .then(res => {\r\n                if (res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(addBuildSuccess(res.data));\r\n                history.push(`/build/${res.data.id}`);\r\n            })\r\n            .catch(error => {\r\n                dispatch(addBuildError(error));\r\n            })\r\n    }\r\n\r\n    if (pending !== false && !build) {\r\n        return (\r\n            <React.Fragment>\r\n                <Header title=\"School CI Server\"></Header>\r\n                <Layout align=\"center\">\r\n                    <Loader/>\r\n                </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    if (fetchError) {\r\n        return (\r\n            <React.Fragment>\r\n                <Header title=\"School CI Server\"></Header>\r\n                <Layout align=\"center\">\r\n                    <Error>Error of fetching</Error>\r\n                </Layout>\r\n            </React.Fragment>           \r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header title={settings.repoName}>\r\n                <div className=\"header__button-group\">\r\n                    <Button className=\"button_type_icon-text\" size=\"s\" onClick={rebuildHandler}>\r\n                        <Icon className=\"button__icon\" type=\"refresh\"/>\r\n                        <span className=\"button__text\">Rebuild</span>\r\n                    </Button>\r\n                    <Button icon size=\"s\" to=\"/settings\">\r\n                        <Icon class=\"button__icon\" type=\"settings\" size=\"xs\"/>\r\n                    </Button>\r\n                </div>\r\n            </Header>\r\n            <Layout container>\r\n                <div className=\"section\">\r\n                    <Build detailed data={build}></Build>\r\n                    <BuildLog test={['Success', 'Fail'].includes(build.status)}>{buildLog || ''}</BuildLog>\r\n                </div>\r\n            </Layout>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BuildDetails;\r\n","import {\r\n    SAVE_SETTINGS_PENDING,\r\n    SAVE_SETTINGS_SUCCESS,\r\n    SAVE_SETTINGS_ERROR,\r\n    FETCH_SETTINGS_PENDING,\r\n    FETCH_SETTINGS_SUCCESS,\r\n    FETCH_SETTINGS_ERROR\r\n} from './actionTypes';\r\n\r\nimport api from '../services/api';\r\n\r\n\r\nexport const fetchSettingsPending = () => ({\r\n    type: FETCH_SETTINGS_PENDING\r\n});\r\n\r\nexport const fetchSettingsSuccess = (settings) => ({\r\n    type: FETCH_SETTINGS_SUCCESS,\r\n    settings\r\n});\r\n\r\nexport const fetchSettingsError = (error) => ({\r\n    type: FETCH_SETTINGS_ERROR,\r\n    error\r\n});\r\n\r\nexport const saveSettingsPending = () => ({\r\n    type: SAVE_SETTINGS_PENDING\r\n});\r\n\r\nexport const saveSettingsSuccess = (settings) => ({\r\n    type: SAVE_SETTINGS_SUCCESS,\r\n    settings\r\n});\r\n\r\nexport const saveSettingsError = (error) => ({\r\n    type: SAVE_SETTINGS_ERROR,\r\n    error\r\n});\r\n\r\nexport const fetchSettings = () => {\r\n    return dispatch => {\r\n        dispatch(fetchSettingsPending());\r\n        \r\n        api.getSettings()\r\n            .then(res => {\r\n                if (res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSettingsSuccess(res.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSettingsError(error));\r\n            })\r\n    }\r\n}\r\n\r\nexport const postSettings = (settings) => {\r\n    return dispatch => {\r\n        dispatch(saveSettingsPending());\r\n        \r\n        api.saveSettings(settings)\r\n            .then(res => {\r\n                if (res.error) {\r\n                    throw(res.error);\r\n                }\r\n\r\n                dispatch(saveSettingsSuccess(settings));\r\n            })\r\n            .catch(error => {\r\n                dispatch(saveSettingsError(error));\r\n            })\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Start, Settings, BuildDetails } from 'pages';\r\nimport {fetchSettings} from '../actions/settings';\r\n\r\nconst Main = () => {\r\n    const settings = useSelector(state => state.settings);\r\n\r\n    const dispatch = useDispatch();\r\n    const getSettings = () => dispatch(fetchSettings());\r\n\r\n    useEffect(() => {\r\n        if (!settings.id) {\r\n            getSettings();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Switch>\r\n                <Route exact path='/' component={Start}/>\r\n                <Route exact path='/settings' component={Settings}/>\r\n                <Route exact path='/build/:id' component={BuildDetails}/>\r\n            </Switch>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {Router} from 'react-router-dom';\r\nimport './App.scss';\r\nimport {Footer} from 'components';\r\nimport Main from 'containers/Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App page page_view_all-screen\">\r\n      <Main/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './Icon.scss';\r\n\r\n\r\nconst Icon = ({type, size, pseudo, className, onClick}) => {\r\n\r\n    const iconClass = classNames(\r\n        'icon',\r\n        'icon_size_' + size,\r\n        'icon_type_' + type,\r\n        className, \r\n        {\r\n            'icon_pseudo': pseudo\r\n        }\r\n    );\r\n\r\n    return (\r\n        <span className={iconClass} onClick={onClick}></span>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    size: PropTypes.string\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './Button.scss';\r\n\r\nimport Icon from '../Icon/Icon';\r\n\r\nconst Button = ({type, size, variant, icon, children, className, disabled, to, onClick}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const buttonClass = classNames(\r\n        'button',\r\n        `button_${variant}`,\r\n        `button_size_${size}`,\r\n        className,\r\n        {\r\n            'button_disabled': disabled,\r\n            'button_type_icon': icon,\r\n        }\r\n    );\r\n\r\n    if (to) {\r\n        return (\r\n            <button type={type} className={buttonClass} onClick={() => history.push(to)} disabled={disabled}>\r\n                {children}\r\n            </button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <button type={type} className={buttonClass} onClick={onClick} disabled={disabled}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string,\r\n    size: PropTypes.string,\r\n    icon: PropTypes.bool,\r\n    variant: PropTypes.string\r\n};\r\n\r\nButton.defaultProps = {\r\n    type: 'button',\r\n    size: 'm',\r\n    icon: false,\r\n    variant: 'default'\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Header.scss';\r\n\r\nimport Button from '../Button/Button';\r\nimport Icon from '../Icon/Icon';\r\n\r\nconst Header = ({title, children}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__content\">\r\n                <h1 className=\"header__title text text_link\" onClick={() => history.push('/')}>{title}</h1>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer__content\">\r\n                <div className=\"footer__links\">\r\n                    <Link className=\"link\" to=\"#\">Support</Link>\r\n                    <Link className=\"link\" to=\"#\">Learning</Link>\r\n                </div>\r\n                <p className=\"footer__copyright text text_link\">© 2020 Your Name</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './Layout.scss';\r\n\r\n\r\nconst Layout = ({align, container, children}) => {\r\n\r\n    const layoutClass = classNames('layout', {\r\n        'layout_align_center': align === 'center',\r\n        'layout_space-h_small': container\r\n    });\r\n\r\n    return (\r\n        <div className={layoutClass}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nLayout.propTypes = {\r\n    align: PropTypes.string\r\n}\r\n\r\nLayout.defaultProps = {\r\n    align: null\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './Configure.scss';\r\n\r\nimport { Button, Icon } from 'components';\r\n\r\nconst Configure = () => {\r\n    return (\r\n        <div className=\"configure\">\r\n            <Icon className=\"configure__icon\" type=\"configure\" size=\"xxxxl\"></Icon>\r\n            <p className=\"configure__title text text_primary\">\r\n                Configure repository connection and synchronization settings\r\n            </p>\r\n            <Button variant=\"action\" size=\"m\" to=\"/settings\">Open settings</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Configure;","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {Button, FormField, FormGroup, FormLabel, FormError, Loader, Error} from 'components';\r\nimport {fetchSettings, postSettings} from 'actions/settings';\r\n\r\nimport './SettingForm.scss';\r\n\r\n\r\nconst SettingForm = () => {\r\n    const settings = useSelector(state => state.settings);\r\n\r\n    const dispatch = useDispatch();\r\n    const saveSettings = (data) => dispatch(postSettings(data));\r\n    const getSettings = () => dispatch(fetchSettings());\r\n\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const onSubmit = (values) => saveSettings(values);\r\n\r\n    useEffect(() => {\r\n        if (settings.id && settings.repoStatus !== 'Cloned') {\r\n            getSettings();\r\n        }\r\n    }, []);\r\n  \r\n    if (settings.pending !== false) {\r\n        return (\r\n            <Loader/>\r\n        )\r\n    }\r\n\r\n    if (settings.error) {\r\n        return (\r\n            <Error>Error of fetching</Error>\r\n        )\r\n    }\r\n\r\n    const waitingCloneRepo = settings.repoStatus === 'Cloning' || settings.save_pending;\r\n    const repoNotCloned = settings.repoStatus === 'NotCloned';\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"layout__container\">\r\n                <form className=\"setting-form form\" name=\"settings\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form__header\">\r\n                        <div className=\"form__title\">Settings</div>\r\n                        <div className=\"form__subtitle\">Configure repository connection and synchronization settings.</div>\r\n\r\n                        { \r\n                            (waitingCloneRepo) &&\r\n                            <div className=\"setting-form__repo-status text text_secondary\">Cloning repository...</div>\r\n                        }\r\n\r\n                        {\r\n                            (repoNotCloned) &&\r\n                            <div className=\"setting-form__repo-status text text_error\">Error of cloning repository</div>\r\n                        }\r\n                    </div>\r\n\r\n                    <FormGroup required>\r\n                        <FormLabel>GitHub repository</FormLabel>\r\n                        <FormField name=\"repoName\"\r\n                            formRef={register({required: 'repoName is required'})}\r\n                            errors={errors.repoName}\r\n                            icon=\"clear\" placeholder=\"user-name/repo-name\"\r\n                            defaultValue={settings.repoName}\r\n                        >\r\n                        </FormField>\r\n                        <FormError>\r\n                            {errors.repoName && errors.repoName.message}\r\n                        </FormError>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <FormLabel>Build command</FormLabel>\r\n                        <FormField name=\"buildCommand\"\r\n                            formRef={register({required: 'buildCommand is required'})}\r\n                            errors={errors.buildCommand}\r\n                            placeholder=\"npm run ...\" icon=\"clear\"\r\n                            defaultValue={settings.buildCommand}\r\n                        >\r\n                        </FormField>\r\n                        <FormError>\r\n                            {errors.buildCommand && errors.buildCommand.message}\r\n                        </FormError>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <FormLabel>Main branch</FormLabel>\r\n                        <FormField name=\"mainBranch\" formRef={register({})} placeholder=\"master\" icon=\"clear\" defaultValue={settings.mainBranch}></FormField>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup direction=\"row\">\r\n                        <FormLabel>Synchronize every</FormLabel>\r\n                        <FormField name=\"period\"\r\n                            formRef={register({required: 'Required', pattern: /^\\d+$/i })}\r\n                            errors={errors.period}\r\n                            size=\"s\" defaultValue={`${settings.period}`}\r\n                            align=\"right\" cleared={false}\r\n                        >\r\n                        </FormField>\r\n                        <div className=\"form__control-postfix\">minutes</div>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"setting-form__footer form__footer\" direction=\"row\">\r\n                        <Button type=\"submit\" className=\"setting-form__button setting-form__submit\" variant=\"action\" size=\"m\" disabled={waitingCloneRepo}>Save</Button>                    \r\n                        <Button type=\"reset\" className=\"setting-form__button\" variant=\"default\" size=\"m\" to=\"/\" disabled={waitingCloneRepo}>Candel</Button>\r\n                    </FormGroup>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default SettingForm;\r\n","import React from 'react';\r\nimport ClassNames from 'classnames';\r\nimport './FormLabel.scss';\r\n\r\nconst FormLabel = ({children}) => {\r\n\r\n    const labelClass = ClassNames('form-label');\r\n\r\n    return (\r\n        <div className={labelClass}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormLabel;","import React, {useState} from 'react';\r\nimport MaskedInput from 'react-text-mask'\r\nimport PropTypes from 'prop-types';\r\nimport Classnames from 'classnames';\r\nimport './FormField.scss';\r\n\r\nimport {Icon} from 'components';\r\n\r\nconst FormField = ({type, name, mask, formRef, errors, size, cleared, align, placeholder, defaultValue}) => {\r\n\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const fieldClass = Classnames('form-field', {\r\n        'form-field_size_s': size === 's',\r\n        'form-field_invalid': errors\r\n    });\r\n\r\n    const inputClass = Classnames('form-field__input', {\r\n        'form-field__input_type_number': align === 'right'\r\n    });\r\n\r\n    const clearInput = () => {\r\n        setValue('');\r\n    }\r\n\r\n    const inputChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={fieldClass}>\r\n            <input type={type} ref={formRef} name={name} className={inputClass} placeholder={placeholder} value={value} onChange={inputChange}/>\r\n            {cleared && <Icon className=\"form-field__icon\" size=\"s\" type=\"clear\" onClick={clearInput}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nFormField.propTypes = {\r\n    type: PropTypes.string,\r\n    size: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    defaultValue: PropTypes.string,\r\n    cleared: PropTypes.bool,\r\n    align: PropTypes.string\r\n}\r\n\r\nFormField.defaultProps = {\r\n    type: 'text',\r\n    size: null,\r\n    placeholder: '',\r\n    defaultValue: '',\r\n    cleared: true,\r\n    align: 'left'\r\n}\r\n\r\nexport default FormField;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ClassNames from 'classnames';\r\nimport './FormGroup.scss';\r\n\r\nconst FormGroup = ({direction, className, required, space, children}) => {\r\n\r\n    const formGroupClass = ClassNames(\r\n        'form-group',\r\n        'form-group_direction_' + direction,\r\n        className,\r\n        {\r\n            'form-group_required': required,\r\n            'form-group_space_m': space === 'm'\r\n        }\r\n    );\r\n\r\n    return (\r\n        <div className={formGroupClass}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nFormGroup.propTypes = {\r\n    required: PropTypes.bool,\r\n    direction: PropTypes.string\r\n}\r\n\r\nFormGroup.defaultProps = {\r\n    required: false,\r\n    direction: 'column'\r\n}\r\n\r\nexport default FormGroup;","import React from 'react';\r\nimport './FormError.scss';\r\n\r\n\r\nconst FormError = ({children}) => {\r\n\r\n    return (\r\n        <div className=\"form-error\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FormError;","import React, {useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Build, Loader, Button} from 'components';\r\nimport {fetchBuilds, buildsClearState} from '../../actions/builds';\r\n\r\n\r\nconst BuildList = () => {\r\n    const {\r\n        items: builds,\r\n        offset,\r\n        limit,\r\n        pending,\r\n        load_more,\r\n        init_loaded,\r\n      } = useSelector(state => state.builds);\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!init_loaded) {\r\n            dispatch(buildsClearState());\r\n            dispatch(fetchBuilds({offset: offset, limit: limit}));\r\n        }\r\n    }, []);\r\n    \r\n    if (pending !== false && offset === 0) {\r\n        return <Loader/>;\r\n    }\r\n\r\n    const buildClickHandler = (build) => {\r\n        history.push(`/build/${build.id}`);\r\n    }\r\n\r\n    const loadMoreBuilds = () => {\r\n        dispatch(fetchBuilds({offset: offset + limit, limit: limit}));\r\n    }\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"layout__container\">\r\n                {\r\n                    builds.map(build => {\r\n                        return <Build key={build.buildNumber} data={build} onClick={buildClickHandler}></Build>\r\n                    })\r\n                }\r\n\r\n                <div className=\"section__footer section__footer_align_left\">\r\n                    {\r\n                        (builds.length >= limit && load_more === false) &&\r\n                        <Button className=\"section__button\" size=\"s\" onClick={loadMoreBuilds}>\r\n                            Show more\r\n                        </Button>\r\n                    }\r\n\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BuildList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ClassNames from 'classnames';\r\nimport { format } from 'date-fns';\r\nimport { ru } from 'date-fns/locale'\r\nimport './Build.scss';\r\nimport {Icon} from 'components';\r\n\r\n\r\nconst Build = ({data, detailed, onClick}) => {\r\n\r\n    const buildClass = ClassNames(\r\n        'build',\r\n        {\r\n            'build_view_details': detailed,\r\n            'build_status_waiting': ['Waiting', 'InProgress'].includes(data.status),\r\n            'build_status_error': ['Fail'].includes(data.status),\r\n        }\r\n    );\r\n\r\n    const clickHandler = () => {\r\n        if (onClick) {\r\n            onClick(data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={buildClass} data-id={data.id} onClick={clickHandler}>\r\n            <div className=\"build__status\">\r\n                <Icon className=\"build__status-icon\" type={data.status.toLowerCase()} size=\"m\"/>\r\n            </div>\r\n            \r\n            <div className=\"build__detail\">\r\n                <div className=\"build__content\">\r\n                    <div className=\"build__header\">\r\n                        <p className=\"build__number\">#{data.buildNumber}</p>\r\n                        <p className=\"build__title\">{data.commitMessage}</p>\r\n                    </div>\r\n                    <div className=\"build__commit\">\r\n                        <div className=\"build__branch icon-text\">\r\n                            <Icon className=\"icon-text__icon icon-text__icon_indent-r_xs\" type=\"commit\" size=\"s\" pseudo/>\r\n                            <div className=\"icon-text__text icon-text__text_size_m\">\r\n                                <span className=\"build__branch-name text text_primary\">{data.branchName}</span>\r\n                                <span className=\"build__branch-commit text text_secondary\">{data.commitHash}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"build__author icon-text\">\r\n                            <Icon className=\"icon-text__icon icon-text__icon_indent-r_xs\" type=\"person\" size=\"s\" pseudo/>\r\n                            <span className=\"icon-text__text icon-text__text_size_m\">{data.authorName}</span>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            \r\n                <div className=\"build__time\">\r\n                        <div className=\"build__datetime icon-text\">\r\n                            <Icon className=\"icon-text__icon icon-text__icon_indent-r_xs\" type=\"date\" size=\"s\" pseudo/>\r\n                            <span className=\"icon-text__text icon-text__text_nowrap text_pseudo\">\r\n                                { data.start ?\r\n                                    format(new Date(data.start), 'dd MMM hh:mm', { locale: ru })\r\n                                    : '-'\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                \r\n                    <div className=\"build__timer icon-text\">\r\n                        <Icon className=\"icon-text__icon icon-text__icon_indent-r_xs\" type=\"timer\" size=\"s\" pseudo/>\r\n                        <span className=\"icon-text__text icon-text__text_nowrap text text_pseudo\">{data.duration || '-'}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nBuild.propTypes = {\r\n    status: PropTypes.string,\r\n    detailed: PropTypes.bool\r\n}\r\n\r\nBuild.defaultProps = {\r\n    status: 'success',\r\n    detailed: false\r\n}\r\n\r\nexport default Build;","import React from 'react';\r\nimport Convert from 'ansi-to-html';\r\nimport './BuildLog.scss';\r\nimport testLog from './testBuildLog';\r\n\r\nconst convert = new Convert({\r\n    fg: '#000'\r\n});\r\n\r\nconst BuildLog = ({children, test}) => {\r\n    const log = (test) ? testLog : children;\r\n\r\n    const createMarkup = () => {\r\n        return {__html: convert.toHtml(log)}\r\n    }\r\n\r\n    return (\r\n        <pre className=\"build-log\" dangerouslySetInnerHTML={createMarkup()}></pre>\r\n    );\r\n}\r\n\r\nexport default BuildLog;","const log = `\r\nHash: \u001b[1m6ecb5351f06605c7e805\u001b[39m\u001b[22m\r\nVersion: webpack \u001b[1m4.42.0\u001b[39m\u001b[22m\r\nTime: \u001b[1m4115\u001b[39m\u001b[22mms\r\nBuilt at: 2020-04-01 \u001b[1m13:17:45\u001b[39m\u001b[22m\r\n        \u001b[1mAsset\u001b[39m\u001b[22m       \u001b[1mSize\u001b[39m\u001b[22m  \u001b[1mChunks\u001b[39m\u001b[22m  \u001b[1m\u001b[39m\u001b[22m           \u001b[1m\u001b[39m\u001b[22m\u001b[1mChunk Names\u001b[39m\u001b[22m\r\n    \u001b[1m\u001b[32mindex.js\u001b[39m\u001b[22m  974 bytes       \u001b[1m0\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  main\r\n\u001b[1m\u001b[32mstyles.css\u001b[39m\u001b[22m   41.8 KiB       \u001b[1m0\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  main\r\nEntrypoint \u001b[1mmain\u001b[39m\u001b[22m = \u001b[1m\u001b[32mstyles.css\u001b[39m\u001b[22m \u001b[1m\u001b[32mindex.js\u001b[39m\u001b[22m\r\n[0] \u001b[1m./src/index.js\u001b[39m\u001b[22m 29 bytes {\u001b[1m\u001b[33m0\u001b[39m\u001b[22m}\u001b[1m\u001b[32m [built]\u001b[39m\u001b[22m\r\n[1] \u001b[1m./src/styles/styles.css\u001b[39m\u001b[22m 39 bytes {\u001b[1m\u001b[33m0\u001b[39m\u001b[22m}\u001b[1m\u001b[32m [built]\u001b[39m\u001b[22m\r\n    + 1 hidden module\r\nChild \u001b[1mmini-css-extract-plugin node_modules/css-loader/dist/cjs.js!node_modules/postcss-loader/src/index.js!src/styles/styles.css\u001b[39m\u001b[22m:\r\n    Entrypoint \u001b[1mmini-css-extract-plugin\u001b[39m\u001b[22m = \u001b[1m\u001b[32m*\u001b[39m\u001b[22m\r\n    [0] \u001b[1m./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src!./src/styles/styles.css\u001b[39m\u001b[22m 44.9 KiB {\u001b[1m\u001b[33m0\u001b[39m\u001b[22m}\u001b[1m\u001b[32m [built]\u001b[39m\u001b[22m\r\n        + 1 hidden module\r\n`;\r\n\r\nexport default log;","import React, {useEffect} from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {addBuild} from 'actions/builds';\r\nimport {Button, FormField, FormGroup, FormError, Modal} from 'components';\r\nimport './NewBuild.scss';\r\n\r\n\r\nconst NewBuild = ({open, onClose, onRunBuild, pending}) => {\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const onSubmit = (values) => {\r\n        onRunBuild(values.commitHash);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            reset({commitHash: ''});\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <Modal open={open}>\r\n            <form className=\"new-build form\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"new-build__title form__title\">\r\n                    New build\r\n                </div>\r\n                <div className=\"new-build__subtitle form__subtitle\">\r\n                    Enter the commit hash which you want to build.\r\n                </div>\r\n                <FormGroup space=\"m\">\r\n                    <FormField name=\"commitHash\"\r\n                        formRef={register({required: true})}\r\n                        errors={errors.commitHash}\r\n                        icon=\"clear\" placeholder=\"Commit hash\"\r\n                    >\r\n                    </FormField>\r\n                    <FormError>\r\n                        {errors.commitHash && errors.commitHash.message}\r\n                    </FormError>\r\n                </FormGroup>\r\n\r\n                <FormGroup space=\"m\" className=\"setting-form__footer form__footer\" direction=\"row\">\r\n                    <Button type=\"submit\" className=\"setting-form__button setting-form__submit\" variant=\"action\" size=\"m\" disabled={pending === true}>Run build</Button>                    \r\n                    <Button type=\"reset\" className=\"setting-form__button\" variant=\"default\" size=\"m\" onClick={onClose} disabled={pending === true}>Candel</Button>\r\n                </FormGroup>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default NewBuild;\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader-container\">\r\n            <div className=\"loader\">\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport ClassNames from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.scss';\r\n\r\n\r\nconst Modal = ({open, onClose, children}) => {\r\n    const modalClass = ClassNames(\r\n        'modal',\r\n        {\r\n            'modal_open': open\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className={modalClass}>\r\n            <div className=\"modal__dialog\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Error.scss';\r\n\r\nimport {Icon} from 'components';\r\n\r\n\r\nconst Error = ({children}) => {\r\n    return (\r\n        <div className=\"loader-container\">\r\n            <div className=\"error\">\r\n                <Icon className=\"error__icon\" type=\"fetch-error\" size=\"l\" pseudo/>            \r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n    SAVE_SETTINGS_PENDING,\r\n    SAVE_SETTINGS_SUCCESS,\r\n    SAVE_SETTINGS_ERROR,\r\n    FETCH_SETTINGS_PENDING,\r\n    FETCH_SETTINGS_SUCCESS,\r\n    FETCH_SETTINGS_ERROR\r\n} from 'actions/actionTypes'\r\n\r\nconst initialState = {};\r\n \r\nconst settings = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_SETTINGS_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            }\r\n\r\n        case FETCH_SETTINGS_SUCCESS:\r\n            return Object.assign({}, state, action.settings, {pending: false});\r\n\r\n        case FETCH_SETTINGS_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: action.error\r\n            }\r\n\r\n        case SAVE_SETTINGS_PENDING:\r\n            return {\r\n                ...state,\r\n                repoStatus: 'Empty',\r\n                save_pending: true\r\n            }\r\n\r\n        case SAVE_SETTINGS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.settings,\r\n                save_pending: false\r\n            }\r\n\r\n        case SAVE_SETTINGS_ERROR:\r\n            return {\r\n                ...state,\r\n                save_pending: false,\r\n                save_error: action.error\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n  \r\nexport default settings;","import {\r\n    FETCH_BUILD_PENDING,\r\n    FETCH_BUILD_SUCCESS,\r\n    FETCH_BUILD_ERROR,\r\n    FETCH_BUILD_LOG_SUCCESS,\r\n    FETCH_BUILD_LOG_ERROR,\r\n    FETCH_BUILDS_PENDING,\r\n    FETCH_BUILDS_SUCCESS,\r\n    FETCH_BUILDS_ERROR,\r\n    ADD_BUILD_PENDING,\r\n    ADD_BUILD_SUCCESS,\r\n    ADD_BUILD_ERROR,\r\n    BUILDS_UPDATE_OFFSET,\r\n    BUILDS_CLEAR_STATE,\r\n    ADD_BUILD_TO_VIEW,\r\n    CLEAR_BUILD_TO_VIEW\r\n} from 'actions/actionTypes'\r\n\r\nconst initialState = {\r\n    items: [],\r\n    offset: 0,\r\n    limit: 10\r\n}\r\n \r\nconst builds = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_BUILDS_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            }\r\n\r\n        case FETCH_BUILDS_SUCCESS:\r\n            const totalFetch = action.builds.length;\r\n\r\n            return {\r\n                ...state,\r\n                items: [...state.items, ...action.builds],\r\n                pending: false,\r\n                init_loaded: true,\r\n                load_more: totalFetch === 0\r\n            }\r\n\r\n        case FETCH_BUILDS_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: action.error\r\n            }\r\n\r\n        case FETCH_BUILD_PENDING:\r\n            return {\r\n                ...state,\r\n                get_build_pending: true\r\n            }\r\n        \r\n        case FETCH_BUILD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.build],\r\n                //build_to_view: action.build,\r\n                get_build_pending: false\r\n            }\r\n        \r\n        case FETCH_BUILD_ERROR:\r\n            return {\r\n                ...state,\r\n                get_build_pending: false,\r\n                error: action.error\r\n            }\r\n\r\n        case ADD_BUILD_PENDING:\r\n            return {\r\n                ...state,\r\n                add_build_pending: true\r\n            }\r\n\r\n        case ADD_BUILD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: [action.build, ...state.items],\r\n                offset: state.offset + 1,\r\n                add_build_pending: false\r\n            }\r\n\r\n        case ADD_BUILD_ERROR:\r\n            return {\r\n                ...state,\r\n                add_build_pending: false\r\n            }\r\n\r\n        case BUILDS_UPDATE_OFFSET: \r\n            return {\r\n                ...state,\r\n                offset: action.offset\r\n            }\r\n\r\n        case BUILDS_CLEAR_STATE:\r\n            return {\r\n                ...state,\r\n                items: []\r\n            }\r\n\r\n        case ADD_BUILD_TO_VIEW:\r\n            return {\r\n                ...state,\r\n                build_to_view: action.build\r\n            }\r\n\r\n        case CLEAR_BUILD_TO_VIEW: \r\n            return {\r\n                ...state,\r\n                build_to_view: null,\r\n                build_log_to_view: null\r\n            }\r\n\r\n        case FETCH_BUILD_LOG_SUCCESS:\r\n            return {\r\n                ...state,\r\n                build_log_to_view: action.log\r\n            }\r\n        \r\n        case FETCH_BUILD_LOG_ERROR:\r\n            return {\r\n                ...state,\r\n                get_log_error: action.error\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n  \r\nexport default builds;","import { combineReducers } from 'redux';\r\nimport settings from './settings';\r\nimport builds from './builds';\r\n\r\n\r\nexport default combineReducers({\r\n    settings,\r\n    builds,\r\n});","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { App } from 'components';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}